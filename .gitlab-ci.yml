stages:
    - test
    - package
    - deploy

variables:
    COUNT_STATS_ARTIFACT_PATH: count-stats/target/count-stats-$ENVIRONMENT_NAME.war
    RELEASE_ARTIFACT_PATH: eva-release/target/eva-release-$ENVIRONMENT_NAME.war
    WS_ARTIFACT_PATH: eva-server/target/eva-$ENVIRONMENT_NAME.war
    MAVEN_SETTINGS: maven-settings.xml
    URL_MAVEN_SETTINGS: https://api.github.com/repos/EBIvariation/configuration/contents/eva-maven-settings.xml
    MEDIA_TYPE: application/vnd.github.raw

test:
    stage: test
    image: maven:3.6.1-jdk-8-alpine
    services:
        - mongo:4.0.18
    script:
        # Gitlab exposes services under their own hostnames. So test host should be "mongo" instead of "localhost".
        - mvn clean test --projects 'eva-lib,eva-server,count-stats,eva-release' -Deva.mongo.host.test=mongo
    only:
        - master
        - tags

# Not executed, parent job definition for package
.package:
    image: maven:3.6.1-jdk-8-alpine
    stage: package
    environment:
        name: $ENVIRONMENT_NAME
    before_script:
        - DATETIME=$(date +%Y-%m-%dT%H-%M-%S)
        - apk add --update curl
        - curl -u $GITHUB_USER:$GITHUB_TOKEN -H "Accept:$MEDIA_TYPE" $URL_MAVEN_SETTINGS > $MAVEN_SETTINGS
    script:
        - mvn package --projects 'eva-lib,eva-server,eva-release' --settings $MAVEN_SETTINGS -P $WS_MAVEN_PROFILE -DskipTests -Dtimestamp=$DATETIME
        - mvn package --projects 'count-stats' --settings $MAVEN_SETTINGS -P $COUNT_STATS_MAVEN_PROFILE -DskipTests -Dtimestamp=$DATETIME
        - cp eva-server/target/eva-*.war $WS_ARTIFACT_PATH
        - cp eva-release/target/eva-*.war $RELEASE_ARTIFACT_PATH
        - cp count-stats/target/count-stats-*.war $COUNT_STATS_ARTIFACT_PATH
    after_script:
        - rm $MAVEN_SETTINGS
    artifacts:
        paths:
            - $WS_ARTIFACT_PATH
            - $COUNT_STATS_ARTIFACT_PATH
            - $RELEASE_ARTIFACT_PATH

package-internal:
    extends: .package
    variables:
        WS_MAVEN_PROFILE: internal
        COUNT_STATS_MAVEN_PROFILE: internal
        ENVIRONMENT_NAME: internal
    only:
        - master

package-staging:
    extends: .package
    variables:
        WS_MAVEN_PROFILE: production_processing
        COUNT_STATS_MAVEN_PROFILE: production_processing
        ENVIRONMENT_NAME: staging
    only:
        - master

package-production:
    extends: .package
    variables:
        WS_MAVEN_PROFILE: production,$ACTIVE_EVAPRO
        # COUNT_STATS_MAVEN_PROFILE is production_processing because we are writing to the staging metadata database
        COUNT_STATS_MAVEN_PROFILE: production_processing
        ENVIRONMENT_NAME: production
    only:
        - tags

# Not executed, parent job definition for Tomcat deployments
.deploy-tomcat:
    stage: deploy
    image: alpine:3.9.5
    environment:
        name: $ENVIRONMENT_NAME
    resource_group: $ENVIRONMENT_NAME
    script:
        - DATETIME=$(date +%Y-%m-%dT%H-%M-%S)
        - apk add --update curl
        - curl -u $TOMCAT_USER:$TOMCAT_PASSWORD -T "$WS_ARTIFACT_PATH" "http://$TOMCAT_HOST/manager/text/deploy?update=true&path=/eva&version=$DATETIME" | grep "OK - Deployed application"
        - curl -u $TOMCAT_USER:$TOMCAT_PASSWORD -T "$RELEASE_ARTIFACT_PATH" "http://$TOMCAT_HOST/manager/text/deploy?update=true&path=/eva/webservices/release&version=$DATETIME" | grep "OK - Deployed application"
        - curl -u $TOMCAT_USER:$TOMCAT_PASSWORD -T "$COUNT_STATS_ARTIFACT_PATH" "http://$TOMCAT_HOST/manager/text/deploy?update=true&path=/eva/webservices/count-stats&version=$DATETIME" | grep "OK - Deployed application"

deploy-tomcat-internal:
    extends: .deploy-tomcat
    variables:
        ENVIRONMENT_NAME: internal
        TOMCAT_USER: $TOMCAT_INTERNAL_USER
        TOMCAT_PASSWORD: $TOMCAT_INTERNAL_PASSWORD
        TOMCAT_HOST: $TOMCAT_INTERNAL_HOST
    dependencies:
        - package-internal
    only:
        - master

deploy-tomcat-staging:
    extends: .deploy-tomcat
    variables:
        ENVIRONMENT_NAME: staging
        TOMCAT_USER: $TOMCAT_DEVELOPMENT_USER
        TOMCAT_PASSWORD: $TOMCAT_DEVELOPMENT_PASSWORD
        TOMCAT_HOST: $TOMCAT_DEVELOPMENT_HOST
    dependencies:
        - package-staging
    only:
        - master

deploy-tomcat-production:
    extends: .deploy-tomcat
    variables:
        ENVIRONMENT_NAME: production
        TOMCAT_USER: $TOMCAT_PRODUCTION_USER
        TOMCAT_PASSWORD: $TOMCAT_PRODUCTION_PASSWORD
        TOMCAT_HOST: $TOMCAT_PRODUCTION_HOST
    dependencies:
        - package-production
    only:
        - tags

deploy-tomcat-production-fallback:
    extends: .deploy-tomcat
    variables:
        ENVIRONMENT_NAME: production
        TOMCAT_USER: $TOMCAT_PRODUCTION_FALLBACK_USER
        TOMCAT_PASSWORD: $TOMCAT_PRODUCTION_FALLBACK_PASSWORD
        TOMCAT_HOST: $TOMCAT_PRODUCTION_FALLBACK_HOST
    dependencies:
        - package-production
    only:
        - tags
